<Activity mc:Ignorable="sap sap2010" x:Class="ReadHeliosTable" this:ReadHeliosTable.in_ExpirationSelection="Bez expirace" this:ReadHeliosTable.in_Suffix="D" this:ReadHeliosTable.in_ShortCode="4148" this:ReadHeliosTable.in_Order="60" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExpirationSelection" Type="InArgument(x:String)" />
    <x:Property Name="in_Suffix" Type="InArgument(x:String)" />
    <x:Property Name="in_ShortCode" Type="InArgument(x:String)" />
    <x:Property Name="in_Order" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2127.33333333333,6386</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadHeliosTable_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadHeliosProductTable" sap:VirtualizedContainerService.HintSize="922.666666666667,6281.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Application: HELIOS Green - DermacolTestRPA - Knappek Libor" sap:VirtualizedContainerService.HintSize="880.666666666667,6189.33333333333" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" Version="V1">
      <uix:NApplicationCard.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Read Product code and Status" sap:VirtualizedContainerService.HintSize="846.666666666667,5894.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:UiElement" Name="TableElement" />
              <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="TableChildren" />
              <Variable x:TypeArguments="x:Int32" Name="i" />
              <Variable x:TypeArguments="scg:List(scg:List(x:String))" Name="SelectorMasterList" />
              <Variable x:TypeArguments="x:String" Name="CodeSuffix" />
              <Variable x:TypeArguments="x:Int32" Name="Order" />
              <Variable x:TypeArguments="sd:DataTable" Name="ProcessedTable" />
              <Variable x:TypeArguments="x:Boolean" Name="pointer1">
                <Variable.Default>
                  <Literal x:TypeArguments="x:Boolean" />
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element Helios  Product Table" FoundElement="[TableElement]" sap:VirtualizedContainerService.HintSize="804.666666666667,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="69d446b8-8d14-4edf-9df4-ab2afa6a00da" InformativeScreenshot="66f8a7e3bd09e1023c205dddaea35d22" Selector="&lt;wnd ctrlname='FormNew' /&gt;&lt;wnd ctrlname='TabGroup' /&gt;&lt;wnd ctrlname='myBrowse' /&gt;&lt;wnd ctrlname='myBrowse' /&gt;&lt;ctrl name='Browse' role='table' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:FindChildren Children="[TableChildren]" DisplayName="Find all Children Elements in Table" Filter="&lt;ctrl /&gt;" sap:VirtualizedContainerService.HintSize="804.666666666667,106" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_CHILDREN">
              <ui:FindChildren.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[TableElement]" Id="d323ac7b-b36d-4ac5-9458-ef3f6e0eee8b" InformativeScreenshot="0a7fc96a3bd7df992b41c427dca5a6c4">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:FindChildren.Target>
            </ui:FindChildren>
            <Assign DisplayName="Convert Order to Int" sap:VirtualizedContainerService.HintSize="804.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Order]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Cint(in_Order.Replace(" ","").Replace(",","."))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Initialize List" sap:VirtualizedContainerService.HintSize="804.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(scg:List(x:String))">[SelectorMasterList]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(scg:List(x:String))">[New List(of List(of String))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="[i]" DisplayName="For Each Row in Table Extract Selectors" sap:VirtualizedContainerService.HintSize="804.666666666667,2985.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[TableChildren]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ui:UiElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:UiElement" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Extract data" sap:VirtualizedContainerService.HintSize="683.333333333333,2847.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(x:String)" Name="SelectorList" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Initialize List of Row Items" sap:VirtualizedContainerService.HintSize="641.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[SelectorList]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="x:String" Collection="[SelectorList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="641.333333333333,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[Item.Selector.ToString]" />
                    <If sap2010:Annotation.AnnotationText="The selector points to entire row (item).&#xA;" Condition="[item.Selector.ToString.Contains(&quot;role='row'&quot;)]" DisplayName="If Element is Row" sap:VirtualizedContainerService.HintSize="641.333333333333,2588.66666666667" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Extract all Data" sap:VirtualizedContainerService.HintSize="604.666666666667,2359.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="RowChildren" />
                            <Variable x:TypeArguments="x:Int32" Name="j" />
                            <Variable x:TypeArguments="x:Boolean" Default="False" Name="pointer" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:FindChildren Children="[RowChildren]" DisplayName="Find Row Children" Filter="&lt;ctrl /&gt;" sap:VirtualizedContainerService.HintSize="562.666666666667,68" sap2010:WorkflowViewState.IdRef="FindChildren_2" Scope="FIND_CHILDREN">
                            <ui:FindChildren.Target>
                              <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[item]" Id="adfd7efb-a00d-4fe9-a88c-be0cebdfe0d1">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:FindChildren.Target>
                          </ui:FindChildren>
                          <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="[j]" DisplayName="For Each Cell in Row" sap:VirtualizedContainerService.HintSize="562.666666666667,2064" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[RowChildren]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="ui:UiElement">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:UiElement" Name="SubItem" />
                                </ActivityAction.Argument>
                                <Sequence sap2010:Annotation.AnnotationText="Serial extracting, as after the final value extraction, the loop is stopped (for improving performance)." DisplayName="Extract Values" sap:VirtualizedContainerService.HintSize="526,1926" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="Status" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[SubItem.Selector.ToString.Contains(&quot;Číslo položky&quot;)]" DisplayName="Look for first value (Product Code)" sap:VirtualizedContainerService.HintSize="484,459.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                                    <If.Then>
                                      <Sequence DisplayName="Read Text and Add to List" sap:VirtualizedContainerService.HintSize="376,275.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="productCode" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uix:NGetText DisplayName="Get Text Code" sap:VirtualizedContainerService.HintSize="334,118.666666666667" sap2010:WorkflowViewState.IdRef="NGetText_4" InUiElement="[SubItem]">
                                          <uix:NGetText.Text>
                                            <OutArgument x:TypeArguments="x:String">[productCode]</OutArgument>
                                          </uix:NGetText.Text>
                                        </uix:NGetText>
                                        <AddToCollection x:TypeArguments="x:String" Collection="[SelectorList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[ProductCode]" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                  <If Condition="[SubItem.Selector.ToString.Contains(&quot;Disp 20+98&quot;)]" DisplayName="Look for second value (Inventory Available)" sap:VirtualizedContainerService.HintSize="484,561.333333333333" sap2010:WorkflowViewState.IdRef="If_10">
                                    <If.Then>
                                      <Sequence DisplayName="Read Text and Add to List" sap:VirtualizedContainerService.HintSize="376,377.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="productCode" />
                                          <Variable x:TypeArguments="x:String" Name="Inventory" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uix:NGetText DisplayName="Get Text Code" sap:VirtualizedContainerService.HintSize="334,118.666666666667" sap2010:WorkflowViewState.IdRef="NGetText_6" InUiElement="[SubItem]">
                                          <uix:NGetText.Text>
                                            <OutArgument x:TypeArguments="x:String">[Inventory]</OutArgument>
                                          </uix:NGetText.Text>
                                        </uix:NGetText>
                                        <Assign DisplayName="Process Inventory string" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_13">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[Inventory]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[Inventory.Replace(" ","").Replace(",",".").Trim]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <AddToCollection x:TypeArguments="x:String" Collection="[SelectorList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[Inventory]" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                  <If Condition="[SubItem.Selector.ToString.Contains(&quot;Stav OZ&quot;)]" DisplayName="Look for third value (Status)" sap:VirtualizedContainerService.HintSize="484,685.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
                                    <If.Then>
                                      <Sequence DisplayName="Read value Status and add to list" sap:VirtualizedContainerService.HintSize="376,501.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uix:NGetText DisplayName="Get Text Status" sap:VirtualizedContainerService.HintSize="334,118.666666666667" sap2010:WorkflowViewState.IdRef="NGetText_5" InUiElement="[SubItem]">
                                          <uix:NGetText.Text>
                                            <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                                          </uix:NGetText.Text>
                                        </uix:NGetText>
                                        <AddToCollection x:TypeArguments="x:String" Collection="[SelectorList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[Status]" />
                                        <AddToCollection x:TypeArguments="scg:List(x:String)" Collection="[SelectorMasterList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[SelectorList]" />
                                        <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[pointer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,333.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[pointer]" sap:VirtualizedContainerService.HintSize="484,241.333333333333" sap2010:WorkflowViewState.IdRef="If_4">
                                  <If.Then>
                                    <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                                  </If.Then>
                                </If>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Sequence DisplayName="Read and Process List" sap:VirtualizedContainerService.HintSize="804.666666666667,2280" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:UiElement" Name="NewElement" />
                <Variable x:TypeArguments="x:String" Name="Code" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[in_ExpirationSelection.Equals(&quot;S Expirací&quot;)]" sap:VirtualizedContainerService.HintSize="762.666666666667,225.333333333333" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <Assign DisplayName="Add /EXP to Code" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Code]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_ShortCode + in_Suffix+ "/EX"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign Code" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Code]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_ShortCode + in_Suffix]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:ForEach x:TypeArguments="scg:List(x:String)" CurrentIndex="{x:Null}" DisplayName="For Each list" sap:VirtualizedContainerService.HintSize="762.666666666667,1522" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[SelectorMasterList]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="scg:List(x:String)">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="scg:List(x:String)" Name="list" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:Annotation.AnnotationText="Order is: Code text, Status text, row selector string" DisplayName="Read Items" sap:VirtualizedContainerService.HintSize="726,1384" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="InventoryDiff" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Calc Inventory Diff" sap:VirtualizedContainerService.HintSize="684,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[InventoryDiff]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Cint(list(2)) - Order]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[list(3).Trim.Contains(&quot;Zrušen&quot;)]" DisplayName="If Zrušen, Ignore" sap:VirtualizedContainerService.HintSize="684,244" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                        </If.Then>
                      </If>
                      <If sap2010:Annotation.AnnotationText="If Exact match for Variant with sufficient inventory found, it is processed and ends" Condition="[list(1).Trim.Equals(Code) And InventoryDiff &gt;= 0]" DisplayName="If Inventory Exists" sap:VirtualizedContainerService.HintSize="684,872.666666666667" sap2010:WorkflowViewState.IdRef="If_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Select Target Row" sap:VirtualizedContainerService.HintSize="376,678.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign Element to activate" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:UiElement">[NewElement]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:UiElement">[New UiElement(new Selector(list(0)))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <uix:NClick ClickType="Single" DisplayName="Click the target row " sap:VirtualizedContainerService.HintSize="334,118.666666666667" sap2010:WorkflowViewState.IdRef="NClick_1" InUiElement="[NewElement]" KeyModifiers="None" MouseButton="Left" />
                            <uix:NKeyboardShortcuts DelayBetweenShortcuts="{x:Null}" ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="334,159.333333333333" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" InUiElement="[NewElement]" Shortcuts="[d(hk)][k(enter)][u(hk)]" />
                            <Assign DisplayName="Assign Success" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[pointer1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Assign Failed" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[pointer1]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <If sap2010:Annotation.AnnotationText="If not exact match found, look for other variants" Condition="[Not pointer1]" DisplayName="If Value not Found" sap:VirtualizedContainerService.HintSize="762.666666666667,359.333333333333" sap2010:WorkflowViewState.IdRef="If_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Looks up and returns datatable of variants to use" DisplayName="Invoke Calculate Variants Table workflow" sap:VirtualizedContainerService.HintSize="334,144.666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Components\Calculate Variants Table.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:List(scg:List(x:String))" x:Key="in_VariantList">
                        <mva:VisualBasicValue x:TypeArguments="scg:List(scg:List(x:String))" ExpressionText="SelectorMasterList" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ShortCode">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ShortCode" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Suffix">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Suffix" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_Quantity">
                        <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="Order" />
                      </InArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ProcessedTable">
                        <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="ProcessedTable" />
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </uix:NApplicationCard.Body>
      <uix:NApplicationCard.TargetApp>
        <uix:TargetApp Area="-14, -14, 3867, 2127" FilePath="C:\ProgramData\Asseco Solutions\NorisWin32Clients\HELIOS\noriswin32.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAKmSURBVFhH1ddJaBNRGMDxRCrioR5q7UarVK1xSi/iWqEUQQ+i1LihEMUodUGstqBCoVBExHhocAM9abFFPHkSBEkhKmLx4FJbRNwQwQoWUZSqVFv/H77Ul2ESJ5OJgw9+hyTvW96bJTO+VGNF3Tl/1ZWgX310PCSH5FIf7Y/AtY0zCF65Iz7guAmJlRySS31lfxBYi+fowXqSTN7V9/KvzcgcmSsxKlZy1Kqf7Q8JUsE/8Q4ROytROxdRMRKbdQNjmo9owSyM78ay6qhstXwnv8kcPcbVBsRn3EY9q50oxedcXbdYfSe/mee73kDCd1zHIkyDbPtTjEKfl7MGhBR7gmMoxBLcgDSXmOOsAbZ3JoGd+ArzqqzI6vejBMtxB1/wDJk3cHxPlVxOxQS34jWsiuqkSSnYjaWYjYO4j8wbkNFuxCb0BZrKD+/bWhy4HDxJohewsxs/cBpyfhSykCkqpf0xXNaa/7a0JYzYq+kH2o5uD0+tubS2joQ3MQKrwjo5DwYQpoF8lTb9OF/T659UfqSAog3oxyjGlMfY3bm6saj+7IZVJL6HYVgV18mO9aOhOh4qkMtWlUseUvxD6aEKinRhEHpxIZ8/vSlrvhBfuHcBCQ20wW4Tg+jinlGR1AQrziNxJaIYgl40lRGcwLxgZJNhdAfPkHwIcuu1akAn86KoZEfyfCQJoUcltSqWyjc8eji3aXP7zm1FJNyCu7AqaibnkPxRhbJvwEhqoBdWBc3+NKAdgg68h1Uxs/FDsMbZIejA70OQGBmehPNJ4M5JqA87l+HFXF2G5pHmRnQLubkRmUeWt+JTcH4rdvHP6AH+w79jCYJ3DyQSpIL1gjrPHsk8fShN91gu50wzXH8s9/zFJJtXs5jKkXkDaiXevZz+m9dzn+8XCVmKseuzft8AAAAASUVORK5CYII=" InformativeScreenshot="cfaa90b166afc44e80879a7f119f4d49.png" Selector="&lt;wnd app='noriswin32.exe' ctrlname='WDesktop'/&gt;" />
      </uix:NApplicationCard.TargetApp>
    </uix:NApplicationCard>
  </Sequence>
</Activity>